{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "1026475081810626628"
    }
  },
  "parameters": {
    "computeGalleryName": {
      "type": "string",
      "defaultValue": "cg_aib_d_use",
      "metadata": {
        "description": "The name of the compute gallery for managing the images."
      }
    },
    "deploymentScriptName": {
      "type": "string",
      "defaultValue": "ds-aib-d-use",
      "metadata": {
        "description": "The name of the deployment script for configuring an existing subnet."
      }
    },
    "existingVirtualNetworkResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID of an existing virtual network. If choosing a private endpoint for the storage account, the virtual network should contain a DNS server with the appropriate conditional forwarder."
      }
    },
    "imageDefinitionIsAcceleratedNetworkSupported": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Indicates whether the image definition supports accelerated networking."
      }
    },
    "imageDefinitionIsHibernateSupported": {
      "type": "bool",
      "metadata": {
        "description": "Indicates whether the image definition supports hibernation."
      }
    },
    "imageDefinitionName": {
      "type": "string",
      "defaultValue": "Win11-22h2-avd",
      "metadata": {
        "description": "The name of the Image Definition for the Shared Image Gallery."
      }
    },
    "imageDefinitionSecurityType": {
      "type": "string",
      "defaultValue": "TrustedLaunch",
      "allowedValues": [
        "ConfidentialVM",
        "ConfidentialVMSupported",
        "Standard",
        "TrustedLaunch"
      ],
      "metadata": {
        "description": "The security type for the Image Definition."
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "windows-11",
      "metadata": {
        "description": "The offer of the marketplace image."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "microsoftwindowsdesktop",
      "metadata": {
        "description": "The publisher of the marketplace image."
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "win11-22h2-avd",
      "metadata": {
        "description": "The SKU of the marketplace image."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "rg-aib-d-use",
      "metadata": {
        "description": "The name of the resource group for the resources."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Clients",
      "metadata": {
        "description": "The subnet name of an existing virtual network."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The key-value pairs of tags for the resources."
      }
    },
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": "DO NOT MODIFY THIS VALUE! The timestamp is needed to differentiate deployments for certain Azure resources and must be set using a parameter."
      }
    },
    "userAssignedIdentityName": {
      "type": "string",
      "defaultValue": "uai-aib-d-use",
      "metadata": {
        "description": "The name for the user assigned identity"
      }
    }
  },
  "variables": {
    "Roles": [
      {
        "resourceGroup": "[split(parameters('existingVirtualNetworkResourceId'), '/')[4]]",
        "name": "Virtual Network Join",
        "description": "Allow resources to join a subnet",
        "permissions": [
          {
            "actions": [
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/subnets/read",
              "Microsoft.Network/virtualNetworks/subnets/join/action",
              "Microsoft.Network/virtualNetworks/subnets/write"
            ]
          }
        ]
      },
      {
        "resourceGroup": "[parameters('resourceGroupName')]",
        "name": "Image Template Contributor",
        "description": "Allow the creation and management of images",
        "permissions": [
          {
            "actions": [
              "Microsoft.Compute/galleries/read",
              "Microsoft.Compute/galleries/images/read",
              "Microsoft.Compute/galleries/images/versions/read",
              "Microsoft.Compute/galleries/images/versions/write",
              "Microsoft.Compute/images/read",
              "Microsoft.Compute/images/write",
              "Microsoft.Compute/images/delete"
            ]
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "copy": {
        "name": "roleDefinitions",
        "count": "[length(range(0, length(variables('Roles'))))]"
      },
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2015-07-01",
      "name": "[guid(variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].name, subscription().id)]",
      "properties": {
        "roleName": "[format('{0} ({1})', variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].name, subscription().subscriptionId)]",
        "description": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].description]",
        "permissions": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].permissions]",
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('UserAssignedIdentity_{0}', parameters('timestamp'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Location": {
            "value": "[parameters('location')]"
          },
          "Name": {
            "value": "[parameters('userAssignedIdentityName')]"
          },
          "Tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "6018659098110995141"
            }
          },
          "parameters": {
            "Location": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('Name')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]"
            }
          ],
          "outputs": {
            "PrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('Name')), '2018-11-30').principalId]"
            },
            "ResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('Name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignments",
        "count": "[length(range(0, length(variables('Roles'))))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('RoleAssignments_{0}_{1}', range(0, length(variables('Roles')))[copyIndex()], parameters('timestamp'))]",
      "resourceGroup": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('timestamp'))), '2022-09-01').outputs.PrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(variables('Roles')[range(0, length(variables('Roles')))[range(0, length(variables('Roles')))[copyIndex()]]].name, subscription().id))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "13253625433942345879"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(variables('Roles')[range(0, length(variables('Roles')))[range(0, length(variables('Roles')))[copyIndex()]]].name, subscription().id))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('ComputeGallery_{0}', parameters('timestamp'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ComputeGalleryName": {
            "value": "[parameters('computeGalleryName')]"
          },
          "ImageDefinitionName": {
            "value": "[parameters('imageDefinitionName')]"
          },
          "ImageDefinitionSecurityType": {
            "value": "[parameters('imageDefinitionSecurityType')]"
          },
          "ImageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('imageSku')]"
          },
          "Location": {
            "value": "[parameters('location')]"
          },
          "Tags": {
            "value": "[parameters('tags')]"
          },
          "ImageDefinitionIsAcceleratedNetworkSupported": {
            "value": "[parameters('imageDefinitionIsAcceleratedNetworkSupported')]"
          },
          "ImageDefinitionIsHibernateSupported": {
            "value": "[parameters('imageDefinitionIsHibernateSupported')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "9235275359623094237"
            }
          },
          "parameters": {
            "ComputeGalleryName": {
              "type": "string"
            },
            "ImageDefinitionName": {
              "type": "string"
            },
            "ImageDefinitionIsAcceleratedNetworkSupported": {
              "type": "bool"
            },
            "ImageDefinitionIsHibernateSupported": {
              "type": "bool"
            },
            "ImageDefinitionSecurityType": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2022-01-03",
              "name": "[parameters('ComputeGalleryName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]"
            },
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2022-01-03",
              "name": "[format('{0}/{1}', parameters('ComputeGalleryName'), parameters('ImageDefinitionName'))]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "properties": {
                "osType": "Windows",
                "osState": "Generalized",
                "hyperVGeneration": "[if(or(contains(parameters('ImageSku'), '-g2'), contains(parameters('ImageSku'), 'win11-')), 'V2', 'V1')]",
                "identifier": {
                  "publisher": "[parameters('ImagePublisher')]",
                  "offer": "[parameters('ImageOffer')]",
                  "sku": "[parameters('ImageSku')]"
                },
                "features": "[if(equals(parameters('ImageDefinitionSecurityType'), 'Standard'), null(), createArray(createObject('name', 'SecurityType', 'value', parameters('ImageDefinitionSecurityType')), createObject('name', 'IsAcceleratedNetworkSupported', 'value', string(parameters('ImageDefinitionIsAcceleratedNetworkSupported'))), createObject('name', 'IsHibernateSupported', 'value', string(parameters('ImageDefinitionIsHibernateSupported')))))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('ComputeGalleryName'))]"
              ]
            }
          ],
          "outputs": {
            "ImageDefinitionResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('ComputeGalleryName'), parameters('ImageDefinitionName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "condition": "[and(not(empty(parameters('subnetName'))), not(empty(parameters('existingVirtualNetworkResourceId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('NetworkPolicy_{0}', parameters('timestamp'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "DeploymentScriptName": {
            "value": "[parameters('deploymentScriptName')]"
          },
          "Location": {
            "value": "[parameters('location')]"
          },
          "SubnetName": {
            "value": "[parameters('subnetName')]"
          },
          "Tags": {
            "value": "[parameters('tags')]"
          },
          "Timestamp": {
            "value": "[parameters('timestamp')]"
          },
          "UserAssignedIdentityResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('timestamp'))), '2022-09-01').outputs.ResourceId.value]"
          },
          "VirtualNetworkName": {
            "value": "[split(parameters('existingVirtualNetworkResourceId'), '/')[8]]"
          },
          "VirtualNetworkResourceGroupName": {
            "value": "[split(parameters('existingVirtualNetworkResourceId'), '/')[4]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "14007046128732702855"
            }
          },
          "parameters": {
            "DeploymentScriptName": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "SubnetName": {
              "type": "string"
            },
            "Tags": {
              "type": "object"
            },
            "Timestamp": {
              "type": "string"
            },
            "UserAssignedIdentityResourceId": {
              "type": "string"
            },
            "VirtualNetworkName": {
              "type": "string"
            },
            "VirtualNetworkResourceGroupName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "[parameters('DeploymentScriptName')]",
              "location": "[parameters('Location')]",
              "tags": "[parameters('Tags')]",
              "kind": "AzurePowerShell",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                }
              },
              "properties": {
                "arguments": "[format('-Subnet {0} -VirtualNetwork {1} -ResourceGroup {2}', parameters('SubnetName'), parameters('VirtualNetworkName'), parameters('VirtualNetworkResourceGroupName'))]",
                "azPowerShellVersion": "9.4",
                "cleanupPreference": "Always",
                "forceUpdateTag": "[parameters('Timestamp')]",
                "retentionInterval": "PT2H",
                "scriptContent": "Param([string]$ResourceGroup, [string]$Subnet, [string]$VirtualNetwork); $VNET = Get-AzVirtualNetwork -Name $VirtualNetwork -ResourceGroupName $ResourceGroup; ($VNET | Select-Object -ExpandProperty \"Subnets\" | Where-Object {$_.Name -eq $Subnet}).privateLinkServiceNetworkPolicies = \"Disabled\"; $VNET | Set-AzVirtualNetwork",
                "timeout": "PT30M"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "roleAssignments",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('timestamp')))]"
      ]
    }
  ]
}